FlowScript {
  // Document Structure
  Document = Line*
  Line = BlankLine | Element

  Element = Modifier* Content
  Content = State | Insight | Question | Completion | Alternative | Statement

  BlankLine = space* "\n"
  Statement = (~"\n" any)+ "\n"?

  // Modifiers (highest precedence)
  Modifier = urgent | strongPositive | highConfidence | lowConfidence

  urgent = "!"
  strongPositive = "++"
  highConfidence = "*"
  lowConfidence = "~"

  // State markers
  State = decidedWithFields | decidedWithoutFields
        | blockedWithFields | blockedWithoutFields
        | parkingWithFields | parkingWithoutFields
        | exploring

  decidedWithFields = "[decided(" decidedFieldContent ")]"
  decidedFieldContent = space* "rationale:" space* string space* "," space* "on:" space* dateString space*

  decidedWithoutFields = "[decided]"

  blockedWithFields = "[blocked(" blockedFieldContent ")]"
  blockedFieldContent = space* "reason:" space* string space* "," space* "since:" space* dateString space*

  blockedWithoutFields = "[blocked]"

  parkingWithFields = "[parking(" parkingFieldContent ")]"
  parkingFieldContent = space* "why:" space* string space* "," space* "until:" space* string space*

  parkingWithoutFields = "[parking]"

  exploring = "[exploring]"

  // Insights, Questions, Commands
  Insight = thought | action
  thought = "thought:" (~"\n" any)*
  action = "action:" (~"\n" any)*

  Question = "?" (~"\n" any)*
  Completion = "âœ“" (~"\n" any)*

  // Alternatives
  Alternative = "||" (~"\n" any)*

  // Lexical elements
  string = "\"" stringChar* "\""
  stringChar = ~("\"" | "\\") any
             | escapeSequence

  escapeSequence = "\\" ("\"" | "\\" | "n" | "t" | "r")

  dateString = "\"" isoDate "\""
  isoDate = digit digit digit digit "-" digit digit "-" digit digit
           ("T" digit digit ":" digit digit ":" digit digit "Z")?

  identifier = letter (letter | digit | "_" | "-")*

  // Lexical rules (whitespace handling)
  space := " " | "\t" | "\r"
}
